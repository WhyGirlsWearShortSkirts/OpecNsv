Tig段定义：
0-99999：算子表
100000-199999：变量表
200000-299999：节点表
300001：判断结构
300002-300009：判断方式
300002：>
300003：>=
300004：<
300005：<=
300006：==
300007：!=
1000000：对象空
2000000：对象异常

1，添加节点及流程树保存功能。
1.1，节点保存基本功能已具备（ok），之后添加功能即可（ok）。
1.1.1，加载节点时，弹出一系列杂乱窗口（现在感觉这个可能就是加载的太快导致的）。
（ok，将settree及setdata中的清理部分换成sethidden了。）
1.2，测试中发现节点图标读取失败或无法读取，需要修复。
（ok，原因是使用fromimage转换的piximage没有给到接下来转换的变量。）
1.3，测试中发现图像等自定义变量存储存在异常，无法存储。
（ok，原因是Qvariant无法转换为QString）。
2，节点常量使用异常（无法使用保存的数据）（检查后发现，数据输入不为空，可以检查一下具体数据）
（ok，变量序号对应错误，tig不能直接作为序号）。
3，针对图像输入，可以添加从文件中获取的功能（不能添加在树部分，这个只有图像处理树才能用到）。
4，针对点，框等具有显示属性的变量，可添加方便获取及设置该变量的方式（不能添加在树部分，这个只有图像处理树才能用到）。
5，针对变量卡片，可以考虑添加显示对应变量赋值情况（以变量转换为str之后的长度作为限制，过长的直接显示有数值，但无法显示）（情况变更，奇怪的函数无论如何都不能显示为str，因此不如就直接显示data的字段格式）。
6，针对点，框等具有显示属性的变量，可以添加是否在图像中显示的功能（不能添加在树部分，这个只有图像处理树才能用到）。
7，针对opecnsv软件，可以添加config功能，保存上次使用的图像集的地址，方便软件打来就能直接正常使用。
（ok）（目前已保存图像集地址，图像缩放尺度，可以添加当前处理到第几张图像（ok））
8，可以添加配置按钮，控制是否保存imagedata数据，也可以控制是否启用功能锁。
9，流程树阶段完成后，就可以对程序进行进一步集成化了，可以把图像算法库，json文件操作等打包成dll再使用，方便后续模块更新。
10，流程树部分可以考虑新增部分区域用于显示打印信息。
11，流程树添加变量部分，不知道为啥焦点不在名称输入框上，需要修复一下。
(ok)（有时候还是不在名称输入框上）
12，保存为节点部分换一下位置吧，流程树操作也是，仔细考虑这些其实应该不属于界面操作，不过得注意不影响变量确定这些界面操作。
（ok，迁移至流程树基础算法部分。）
13，标签用不了中文问题解决。
（ok，以前一直使用toLocal8Bit(),这个算法将标签保存为gb格式，改为toutf8()解决）
14，json文件不能存在中文路径解决。
（ok，原因是c的文件操作用不了中文，但json操作不依赖c的文件操作，因此换成qt的文件操作解决。）
15，预标注操作文件不要再固定位置读写了，加上任意位置保存及读取功能（这个后续还有意义么？感觉流程树功能完善后，就可以利用默认树代替它了）。
16，测试发现当出现节点没有定义输入的时候似乎不会弹出无法执行，后台弹出节点存在未定义变量，然后程序崩溃，需要修复（不仅节点，算子也同样存在该问题，基本定位问题在run部分）
(ok,原因是run部分设定为static算法，导致一旦return对象就被撤销，因此QMessage用show（）无法显示，用exec()找不到父窗口，进而导致崩溃)。
17，当前流程树基本架构还无法解决类似QList,std::vector之类重复多值变量的输出及解算，所有算法输出均为单解，之后需要想办法解决这个问题（目前的想法是，还是在变量上解决，增加多解变量，然后该变量可以选择单输出或多输出，对于多解输出，应该对应添加多解收束算法，用于跳出循环）。
18，对于节点，应该添加程序默认节点，勾选则存入默认节点，默认节点在程序打开时自动读取。
（ok）（简化节点保存流程。）
19，对于部分算子，节点运行时变量无法给负数。
（ok，把变量输入框的范围加上负数区间就可以了。）
20，加入节点表后，算子表颜色异常。
（ok，给算子表颜色改变功能加了个启用。）
21，保存为节点时，如流程中存在节点，则报错存在未确认输入，猜测可能是检查算子部分没有考虑常量去除导致。
（ok，原因是检查算子是否可以运行的时候没有去除对常量的验证。）
22，算子卡片，名称提示无法显示。
（ok，调整样式表后解决。）
23，流程树需要添加判断结构及循环结构。
23.1，判断结构修改流程树操作提取部分。
（ok，已适应性修改新增流程及流程拆接部分。）
23.2，流程树运行时适应判断结构。（ok，运行函数拆解成较容易理解的结构）
23.3，流程树界面操作适应判断结构（主要是参数选择（ok，基本完成，但需要完善不同变量能使用的判断方式不同（ok），另规定image类型不能用于判断），包括判断方式的选择（ok））。
24，在调试树阶段，树中查找变量等操作会变卡，但重新打开程序加载树之后，程序运行会变快，怀疑是某些连接未清除。
25，调试判断结构时，添加判断变量程序无法打开。
（ok，原因是部分读取超出list大小。）
26，流程树拆分成流程部分进一步细化，将提取算子及节点提取出来。
（ok，已拆解。）
27，流程树更改流程显示形式为流程卡片（ok），方便判断结构，循环结构等显示。
27.1，判断结构流程卡片完善，目前判断参数存在异常。（ok）
28，流程树拆分适应判断等结构。
（ok，已拆分，将算子，节点，结构的读取分别调整为单独的函数，将对tip的读取拆分为单独的函数。）
29，流程树运行界面，将输入输出部分提取出来。
（ok，添加界面展开功能）
30，添加流程时，增加确认步骤，选择是使用流程及结构。
（ok，在流程选择界面新增步骤。）
31，流程树函数规范命名，流程树基础函数使用驼峰式命名，图像处理专用函数用属性式命名。
（ok）
32，流程树流程赋值拆分，更正形式为先拆接为流程后赋值，再组合回流程树
（ok，主要是写了组合部分）。
33，opecnsv标注时无法读取中文路径图像。
（ok，原因是调整json文件读取时，将toLocal8Bit()改为toutf8()，换回之后读取正常。）
34，判断结构，判断变量选择后，变量不显示为输入变量。
（ok，已在解析部分添加对变量的重新赋值）
35，变量保存，读取中针对特殊变量类型做的处理独立出去。
（ok，已独立为函数，并按照属性式命名）
36，尝试将流程树运行加入到预标注流程中。
37，转换为node时，自动生成的info无法识别来自判断部分的说明，且只显示一个说明。
（ok，目前已修改完成）
38，流程树运行时间计算及显示。
（ok，时间显示在变量界面）
39，粘贴标注框时，可以粘贴至鼠标位置。
（ok，不能直接使用move函数，但可以手动调整。）
40，添加鼠标手势，添加带角度的复制的标注框。
（ok，添加按住ctrl+art，长按鼠标左键建立标注框）
41，标注时异常选中标注框问题。
（ok，添加禁用选中的功能）
42，直接添加标注框时，存在鼠标位置不动，鼠标不在标注框上，却可以选中标注框的问题。
（ok，原因是标注框碰撞箱仍为最大，调整为直接添加标注箱时，不提供最大碰撞箱）
